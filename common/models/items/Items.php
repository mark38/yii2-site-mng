<?php

namespace common\models\items;

use Yii;
use common\models\main\Contents;
use common\models\gallery\GalleryImages;

/**
 * This is the model class for table "items".
 *
 * @property integer $id
 * @property string $name
 * @property integer $item_types_id
 * @property integer $gallery_images_id
 * @property integer $contents_id
 * @property string $title
 * @property string $url
 * @property string $price
 * @property string $old_price
 * @property integer $seq
 * @property integer $state
 *
 * @property Contents $content
 * @property GalleryImages $galleryImage
 * @property ItemTypes $itemType
 */
class Items extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'items';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['item_types_id', 'gallery_images_id', 'contents_id', 'seq', 'state'], 'integer'],
            [['price', 'old_price'], 'number'],
            [['name', 'title', 'url'], 'string', 'max' => 255],
            [['contents_id'], 'exist', 'skipOnError' => true, 'targetClass' => Contents::className(), 'targetAttribute' => ['contents_id' => 'id']],
            [['gallery_images_id'], 'exist', 'skipOnError' => true, 'targetClass' => GalleryImages::className(), 'targetAttribute' => ['gallery_images_id' => 'id']],
            [['item_types_id'], 'exist', 'skipOnError' => true, 'targetClass' => ItemTypes::className(), 'targetAttribute' => ['item_types_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Наименование',
            'item_types_id' => 'Item Types ID',
            'gallery_images_id' => 'Gallery Images ID',
            'contents_id' => 'Contents ID',
            'title' => 'Заголовок',
            'url' => 'Url',
            'price' => 'Цена',
            'old_price' => 'Старая цена',
            'seq' => 'Номер по порядку',
            'state' => 'Активный (опубликованный) элемент',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getContent()
    {
        return $this->hasOne(Contents::className(), ['id' => 'contents_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGalleryImage()
    {
        return $this->hasOne(GalleryImages::className(), ['id' => 'gallery_images_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getItemType()
    {
        return $this->hasOne(ItemTypes::className(), ['id' => 'item_types_id']);
    }

    public function beforeSave($insert)
    {
        if (!$this->seq) {
            $lastItem = self::find()->where(['item_types_id' => $this->item_types_id])->orderBy(['seq' => SORT_DESC])->one();
            $this->seq = $lastItem ? $lastItem->seq + 1 : 1;
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
