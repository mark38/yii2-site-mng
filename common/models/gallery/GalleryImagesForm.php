<?php

namespace common\models\gallery;

use Yii;
use yii\web\UploadedFile;
use common\models\main\Links;

class GalleryImagesForm extends GalleryImages
{
    /** @var UploadedFile */
    public $imageSmall;
    /** @var UploadedFile */
    public $imageLarge;
    public $linksId;

    public function rules()
    {
        return array_merge(parent::rules(), [
            [['linksId'], 'integer'],
            [['imageSmall', 'imageLarge'], 'file', 'skipOnEmpty' => true, 'extensions' => 'png, jpg, jpeg'],
        ]);
    }

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        $this->imageSmall = $this->small;
        $this->imageLarge = $this->large;
    }

    public function attributeLabels()
    {
        return array_merge(parent::attributeLabels(), [
            'imageSmall' => 'Предварительное изображение',
            'imageLarge' => 'Полноразмерное изображение',
        ]);
    }

    public function upload()
    {
        $galleryType = GalleryTypes::findOne(GalleryGroups::findOne($this->gallery_groups_id)->gallery_types_id);

        $path = Yii::getAlias('@frontend/web'.$galleryType->destination);
        $urlPath = preg_replace('/\/$/', '', $galleryType->destination);

        if (!is_dir($path)) mkdir($path, 0775, true);
        
        if ($this->validate()) {
            if ($this->imageSmall) {
                if ($this->small && basename($this->small) == $this->imageSmall->name) {
                    $baseName = $this->imageSmall->baseName;
                } else {
                    if ($this->small) unlink(Yii::getAlias('@frontend/web'.$this->small));
                    $baseName = $this->checkBaseName($path, $this->imageSmall->baseName, $this->imageSmall->extension);
                }
                $this->imageSmall->saveAs($path.'/'.$baseName.'.'.$this->imageSmall->extension);
                $this->small = $urlPath.'/'.$baseName.'.'.$this->imageSmall->extension;
            } else {
                if (!$this->small && $this->linksId) {
                    $galleryImage = $this::findOne(Links::findOne($this->linksId)->gallery_images_id);
                    if ($galleryImage && $galleryImage->small) unlink(Yii::getAlias('@frontend/web'.$galleryImage->small));
                }
            }

            if ($this->imageLarge) {
                if ($this->large && basename($this->large) == $this->imageLarge->name) {
                    $baseName = $this->imageLarge->baseName;
                } else {
                    if ($this->large) unlink(Yii::getAlias('@frontend/web'.$this->large));
                    $baseName = $this->checkBaseName($path, $this->imageLarge->baseName, $this->imageLarge->extension);
                }
                $this->imageLarge->saveAs($path.'/'.$baseName.'.'.$this->imageLarge->extension);
                $this->large = $urlPath.'/'.$baseName.'.'.$this->imageLarge->extension;
            } else {
                if (!$this->large && $this->linksId) {
                    $galleryImage = isset($galleryImage) ? $galleryImage : $this::findOne(Links::findOne($this->linksId)->gallery_images_id);
                    if ($galleryImage && $galleryImage->large) unlink(Yii::getAlias('@frontend/web'.$galleryImage->large));
                }
            }

            $this->imageSmall = null;
            $this->imageLarge = null;
        } else {
            return false;
        }

        return true;
    }

    public function afterSave($insert, $changedAttributes)
    {
        if (!$this->small && !$this->large) {
            $this->delete();
        } else {
            if ($this->linksId) {
                Links::updateAll(['gallery_images_id' => $this->id], ['id' => $this->linksId]);
            }
        }
    }

    private function checkBaseName($path, $baseName, $extension)
    {
        $path = preg_replace('/\/$/', '', $path);

        if (is_file($path.'/'.$baseName.'.'.$extension)) {
            do {
                if (preg_match('/(-)(\d+)$/', $baseName, $match)) {
                    $baseName = preg_replace('/'.$match[0].'/', '', $baseName) . '-' . ($match[2] + 1);
                } else {
                    $baseName = $baseName.'-1';
                }
            } while(is_file($path.'/'.$baseName.'.'.$extension));
        }

        return $baseName;
    }
}