<?php
namespace backend\widgets\map;

use common\models\shop\ShopGroups;
use yii\base\Widget;
use yii\base\InvalidConfigException;
use common\models\main\Links;
use yii\bootstrap\Html;
use yii\bootstrap\ButtonDropdown;

class ProductLinks extends Widget
{
    public $categoriesId;
    public $parent = null;
    public $linksId = null;
    private $parentsIds;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        if (empty($this->categoriesId)) {
            throw new InvalidConfigException("The 'categories_id' property has not been set.");
        }

        if ($this->linksId) {
            $this->parentsIds = (new Links())->getParentsIds($this->linksId);
        }
    }

    public function getLinks($parent)
    {
        $links = Links::find()
            ->where(['categories_id' => $this->categoriesId])
            ->andWhere(['parent' => $parent])
            ->orderBy(['seq' => SORT_ASC])
            ->all();

        if (!$links) return '<em class="text-muted">Записи отсутствуют.</em>';

        $html = Html::beginTag('ul', [
            'class' => 'list-unstyled links-list'
        ]);

        /**
         * @var integer $i
         * @var Links $link
         */
        foreach ($links as $i => $link) {
            $childLinkAction = '';
            $childrenBlock = '';
            if ($link->child_exist == 1) {
                if ($this->parentsIds && in_array($link->id, $this->parentsIds)) {
                    $iconClass = 'fa fa-minus-square-o';
                    $status = 'hide';
                    $childrenBlock = $this->getLinks($link->id);

                    $childrenClass = ' show';
                } else {
                    $iconClass = 'fa fa-plus-square-o';
                    $status = 'show';
                    $childrenBlock = '';
                    $childrenClass = '';
                }
                $childLinkAction = Html::a('<i class="'.$iconClass.'" aria-hidden="true"></i>', false, [
                    'class' => 'text-muted get-children',
                    'data-status' => $status,
                    'data-parent' => $link->id,
                    'data-level' => $link->level,
                    'onclick' => 'getChildren($(this))'
                ]);

                $childrenBlock = Html::tag('div', $childrenBlock, [
                    'class' => 'children-block' . $childrenClass,
                    'id' => 'children-block-link-'.$link->id
                ]);
            }

            $shopGroup = ShopGroups::findOne(['links_id' => $link->id]);
            if ($shopGroup) {
                $actions = ButtonDropdown::widget([
                    'label' => '<i class="glyphicon glyphicon-option-vertical"></i>',
                    'dropdown' => [
                        'items' => [
                            ['label' => 'Параметры', 'url' => ['links', 'action' => 'ch', 'id' => $link->id, 'type' => 'group']],
                            ['label' => 'Добавить подгруппу', 'url' => ['links', 'action' => 'add', 'parent' => $link->id, 'type' => 'group']],
                            ['label' => 'Добавить номенклатуру', 'url' => ['links', 'action' => 'add', 'parent' => $link->id, 'type' => 'good']],
                        ],
                    ],
                    'encodeLabel' => false,
                    'options' => ['class' => 'btn btn-link btn-xs']
                ]);
            } else {
                $actions = Html::a('<i class="fa fa-cog" aria-hidden="true"></i>', ['links', 'action' => 'ch', 'id' => $link->id, 'parent' => $link->parent, 'type' => 'good'], ['class' => 'btn btn-link btn-xs']);
            }

            $html .= Html::tag('li',
                Html::tag('div',

                    Html::beginTag('div', ['class' => 'row']) .
                    Html::tag('div', $childLinkAction . Html::tag(($shopGroup ? 'strong' : 'span'), $link->anchor), ['class' => 'col-sm-9 col-md-10']) .
                    Html::tag('div', $actions, ['class' => 'col-sm-3 col-md-2 action text-right']) .
                    Html::endTag('div'),

                    ['class' => 'inner' . ($link->id == $this->linksId ? ' active' : '')]) .
                $childrenBlock
            );
        }

        $html .= Html::endTag('ul');

        return $html;
    }

    public function run()
    {
        parent::run(); // TODO: Change the autogenerated stub
        ProductLinksAsset::register($this->view);

        echo $this->getLinks($this->parent);
    }
}